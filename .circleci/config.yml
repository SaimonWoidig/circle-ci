version: 2.1

orbs:
  go: circleci/go@1.9.0
  docker: circleci/docker@2.4.0

jobs:
  build-backend:
    docker:
      - image: docker.io/library/golang:1.21.5-alpine
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - run:
          name: list folder (DEBUG)
          command: ls -lah
      - go/load-cache
      - go/mod-download
      - run:
          name: "Build static Go binary"
          command: go build -v -ldflags "-v -s -w -extldflags '-static'" -tags "osusergo,netgo" -trimpath -o dist/backend
      - go/save-cache
      - persist_to_workspace:
          root: "dist"
          paths:
            - "backend"
  containerize-backend:
    docker:
      - image: "cimg/base:stable"
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - attach_workspace:
          at: "dist/backend"
      - docker/build:
          registry: ghcr.io/saimonwoidig/circle-ci
          image: backend
          tag: 1.0.0
          docker-context: .
          dockerfile: "docker/Dockerfile"
      - docker/push:
          registry: ghcr.io/saimonwoidig/circle-ci
          image: frontend
          tag: 1.0.0
  containerize-frontend:
    docker:
      - image: "cimg/base:stable"
    working_directory: ~/project/frontend
    steps:
      - checkout:
          path: ~/project
      - run:
          name: list folder (DEBUG)
          command: ls -lah
      - docker/build:
          registry: ghcr.io/saimonwoidig/circle-ci
          image: frontend
          tag: 1.0.0
          docker-context: .
          dockerfile: "docker/Dockerfile"
      - docker/push:
          registry: ghcr.io/saimonwoidig/circle-ci
          image: frontend
          tag: 1.0.0

workflows:
  ci-workflow:
    jobs:
      - build-backend
      - containerize-backend:
          requires:
            - build-backend
      - containerize-frontend
